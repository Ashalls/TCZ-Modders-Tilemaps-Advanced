<xml xmlns="https://developers.google.com/blockly/xml"><block type="pxt-on-start" id="H1TVL;m1%yIEwe~Oc%]P" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="gke:X%^un.7Tw?_|h-9," editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace tilesAdvanced {" line1="    /**" line2="     * Returns a list of tiles in a plus sign within a tile in a given range" line3="     */" line4="    //% blockId=getAdjacentTiles" line5="    //% block=&quot;get tiles near to $tile within $distance&quot;" line6="    //% group=&quot;Local Tiles&quot;" line7="    //% weight=20" line8="    export function getAdjacentTiles(tile: tiles.Location, distance: number): tiles.Location[] {" line9="        let i: number;" line10="        let col = tile.col;" line11="        let row = tile.row;" line12="        let adjacent_tiles = [tile];" line13="" line14="        for (i = 0; i &lt; distance; i++) {" line15="            adjacent_tiles.push(tiles.getTileLocation(col - i, row))" line16="        }" line17="        for (i = 0; i &lt; distance; i++) {" line18="            adjacent_tiles.push(tiles.getTileLocation(col + i, row))" line19="        }" line20="        for (i = 0; i &lt; distance; i++) {" line21="            adjacent_tiles.push(tiles.getTileLocation(col, row - i))" line22="        }" line23="        for (i = 0; i &lt; distance; i++) {" line24="            adjacent_tiles.push(tiles.getTileLocation(col, row + i))" line25="        }" line26="        return adjacent_tiles" line27="    }" line28="}" numlines="29"></mutation></block></statement></block></xml>